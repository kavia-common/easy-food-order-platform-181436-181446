{"is_source_file": true, "format": "Python", "description": "This is a Python source file configuring and managing database interactions for an asynchronous food ordering backend platform using SQLAlchemy ORM. It defines functions to initialize the database, seed demo data, and provide async sessions for database operations.", "external_files": [".models", "sqlalchemy", "sqlalchemy.ext.asyncio", "sqlalchemy.orm", "sqlalchemy", "sqlalchemy.utils.security"], "external_methods": ["os.getenv", "sqlalchemy.ext.asyncio.create_async_engine", "sqlalchemy.ext.asyncio.async_sessionmaker", "sqlalchemy.orm.declarative_base", "sqlalchemy.select", "sqlalchemy.ext.asyncio.AsyncSession", "sqlalchemy.ext.asyncio.AsyncGenerator", "sqlalchemy.ext.asyncio.run_sync", "sqlalchemy.orm.sessionmaker", "sqlalchemy.orm.Session", "sqlalchemy.orm.declarative_base", "sqlalchemy.orm.Sessionmaker", "sqlalchemy.orm.query.Query", "security.get_password_hash"], "published": ["get_async_session", "init_db", "seed_demo_data"], "classes": [], "methods": [{"name": "AsyncGenerator[AsyncSession,None] get_async_session()", "description": "Provides an async generator yielding a database session for request-scoped operations.", "scope": "", "scopeKind": ""}, {"name": "None init_db()", "description": "Initializes the database by creating tables if they do not already exist.", "scope": "", "scopeKind": ""}, {"name": "None seed_demo_data()", "description": "Seeds the database with demo user, restaurants, and menu items if it is empty.", "scope": "", "scopeKind": ""}], "calls": ["async_session_factory()", "Base.metadata.create_all", "session.execute", "session.add", "session.add_all", "session.flush", "session.commit", "engine.begin", "conn.run_sync", "get_password_hash"], "search-terms": ["async database session", "seed demo data", "SQLAlchemy async engine", "Python async ORM", "database initialization"], "state": 2, "file_id": 5, "knowledge_revision": 12, "git_revision": "", "ctags": [{"_type": "tag", "name": "Base", "path": "/home/kavia/workspace/code-generation/easy-food-order-platform-181436-181446/food_ordering_backend/src/api/database.py", "pattern": "/^Base = declarative_base()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DATABASE_URL", "path": "/home/kavia/workspace/code-generation/easy-food-order-platform-181436-181446/food_ordering_backend/src/api/database.py", "pattern": "/^DATABASE_URL = os.getenv(\"DATABASE_URL\", \"sqlite+aiosqlite:\\/\\/\\/.\\/dev.db\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "async_session_factory", "path": "/home/kavia/workspace/code-generation/easy-food-order-platform-181436-181446/food_ordering_backend/src/api/database.py", "pattern": "/^async_session_factory = async_sessionmaker(engine, expire_on_commit=False, class_=AsyncSession)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "engine", "path": "/home/kavia/workspace/code-generation/easy-food-order-platform-181436-181446/food_ordering_backend/src/api/database.py", "pattern": "/^engine = create_async_engine(DATABASE_URL, echo=False, future=True)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_async_session", "path": "/home/kavia/workspace/code-generation/easy-food-order-platform-181436-181446/food_ordering_backend/src/api/database.py", "pattern": "/^async def get_async_session() -> AsyncGenerator[AsyncSession, None]:$/", "language": "Python", "typeref": "typename:AsyncGenerator[AsyncSession,None]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "init_db", "path": "/home/kavia/workspace/code-generation/easy-food-order-platform-181436-181446/food_ordering_backend/src/api/database.py", "pattern": "/^async def init_db() -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "seed_demo_data", "path": "/home/kavia/workspace/code-generation/easy-food-order-platform-181436-181446/food_ordering_backend/src/api/database.py", "pattern": "/^async def seed_demo_data() -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "()"}], "hash": "ea8204d32f3908b6c36b570cd33e3d8c", "format-version": 4, "code-base-name": "food_ordering_backend", "filename": "food_ordering_backend/src/api/database.py", "fields": [{"name": "Base = declarative_base()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DATABASE_URL = os.getenv(\"DATABASE_URL\", \"sqlite+aiosqlite:\\/\\/\\/.\\/dev.db\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "async_session_factory = async_sessionmaker(engine, expire_on_commit=False, class_=AsyncSession)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "engine = create_async_engine(DATABASE_URL, echo=False, future=True)", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"12": ""}]}